import streamlit as st

image_url = "https://static.tildacdn.com/tild6161-6662-4063-b862-333738316132/Group_13_3.svg"

questions = [
    ("Вы предпочитаете проводить время с другими людьми или в одиночестве?", "С другими людьми", "В одиночестве", "E", "I"),
    ("Вы предпочитаете конкретные факты или интуитивные ощущения?", "Конкретные факты", "Интуитивные ощущения", "S", "N"),
    ("Вы стараетесь принимать решения на основе логики или эмоций?", "Логика", "Эмоции", "T", "F"),
    ("Вам комфортнее с четкими планами или гибким подходом?", "Четкие планы", "Гибкий подход", "J", "P"),
    ("Вам проще заводить новые знакомства или оставаться в узком кругу знакомых?", "Заводить знакомства", "Узкий круг", "E", "I"),
    ("Вы скорее верите в очевидное или ищете скрытые смыслы?", "Очевидное", "Скрытые смыслы", "S", "N"),
    ("Вы принимаете решения, основываясь на фактах или на личных ценностях?", "Факты", "Личные ценности", "T", "F"),
    ("Вы предпочитаете, чтобы все было организовано или оставляете место для импровизации?", "Организация", "Импровизация", "J", "P"),
    ("Вы предпочитаете быть в центре внимания или оставаться на заднем плане?", "В центре внимания", "На заднем плане", "E", "I"),
    ("Вы обращаете внимание на детали или сосредоточены на общей картине?", "Детали", "Общая картина", "S", "N"),
    ("Принимая решение, вы обращаете внимание на логику или на чувства других?", "Логика", "Чувства других", "T", "F"),
    ("Вы предпочитаете следовать плану или реагировать на события по мере их поступления?", "Следовать плану", "Реагировать на события", "J", "P"),
    ("Вам комфортнее в большом коллективе или в маленьком?", "Большой коллектив", "Маленький коллектив", "E", "I"),
    ("Вы замечаете детали или пытаетесь понять общую идею?", "Детали", "Общая идея", "S", "N"),
    ("Вы считаете, что факты важнее чувств?", "Факты", "Чувства", "T", "F"),
    ("Вы предпочитаете иметь расписание или быть спонтанным?", "Расписание", "Спонтанность", "J", "P"),
    ("Вы легко заводите знакомства или предпочитаете близкие связи?", "Легко заводить знакомства", "Близкие связи", "E", "I"),
    ("Вы доверяете своим чувствам или больше полагаетесь на логику?", "Чувства", "Логика", "T", "F"),
    ("Вы предпочитаете заранее знать, что произойдет, или быть гибким?", "Заранее знать", "Гибкость", "J", "P"),
    ("Вы общительный человек или склонны быть в тени?", "Общительный", "В тени", "E", "I"),
]

mbti_descriptions = {
    "ESTJ": "ESTJ (Режиссер) — Штирлиц. Логико-сенсорный экстраверт, эффективный организатор, ценящий порядок и практичность.",
    "ENTJ": "ENTJ (Полководец) — Джек Лондон. Логико-интуитивный экстраверт, лидер, нацеленный на достижение амбициозных целей.",
    "ISTP": "ISTP (Маэстро) — Габен. Сенсорно-логический интроверт, предпочитает практичность и независимость.",
    "INTP": "INTP (Новатор) — Бальзак. Интуитивно-логический интроверт, мыслитель и аналитик с оригинальными идеями.",
    "ESFJ": "ESFJ (Инструктор) — Гюго. Этически-сенсорный экстраверт, отзывчивый и доброжелательный, заботится о других.",
    "ENFJ": "ENFJ (Коуч) — Гамлет. Этически-интуитивный экстраверт, вдохновляет и поддерживает окружающих.",
    "INFP": "INFP (Философ) — Есенин. Интуитивно-этический интроверт, мечтатель и идеалист с богатым внутренним миром.",
    "ISFP": "ISFP (Артист) — Дюма. Сенсорно-этический интроверт, живет в гармонии с собой и окружающими.",
    "ESTP": "ESTP (Бизнесмен) — Жуков. Сенсорно-логический экстраверт, энергичный и уверенный в себе.",
    "ESFP": "ESFP (Гедонист) — Наполеон. Сенсорно-этический экстраверт, живет настоящим и ценит удовольствие от жизни.",
    "ISFJ": "ISFJ (Покровитель) — Драйзер. Сенсорно-этический интроверт, надежный и заботливый, ценит традиции.",
    "ISTJ": "ISTJ (Следователь) — Максим Горький. Логико-сенсорный интроверт, ответственный и дисциплинированный.",
    "ENFP": "ENFP (Исследователь трендов) — Гексли. Интуитивно-этический экстраверт, любит экспериментировать и исследовать новые идеи.",
    "ENTP": "ENTP (Изобретатель) — Дон Кихот. Интуитивно-логический экстраверт, креативный и любознательный новатор.",
    "INTJ": "INTJ (Стратег) — Робеспьер. Логико-интуитивный интроверт, стратег и планировщик с дальновидностью.",
    "INFJ": "INFJ (Просветленный) — Достоевский. Этически-интуитивный интроверт, глубокомыслящий и чуткий к окружающим."
}

def calculate_mbti(types):
    mbti = ""
    mbti += "E" if types["E"] > types["I"] else "I"
    mbti += "S" if types["S"] > types["N"] else "N"
    mbti += "T" if types["T"] > types["F"] else "F"
    mbti += "J" if types["J"] > types["P"] else "P"
    return mbti


st.title("Тест MBTI")
st.image(image_url, use_container_width=True)

types = {"E": 0, "I": 0, "S": 0, "N": 0, "T": 0, "F": 0, "J": 0, "P": 0}

# Проходим по вопросам и записываем ответы
for question, option1, option2, type1, type2 in questions:
    st.markdown(f"<p style='font-size:24px;'>{question}</p>", unsafe_allow_html=True)
    
    # Выбор ответа
    answer = st.radio("", (option1, option2), key=question)  # используем ключ, чтобы радиокнопки не пересекались
    if answer == option1:
        types[type1] += 1
    else:
        types[type2] += 1

# После ответов на все вопросы вычисляем тип
if st.button("Получить результат"):
    mbti = calculate_mbti(types)
    st.subheader(f"Ваш MBTI тип: {mbti}")
    st.write(mbti_descriptions.get(mbti, "Описание для данного типа не найдено"))
