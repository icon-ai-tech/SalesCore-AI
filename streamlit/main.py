import streamlit as st
import time
import pandas as pd
import base64
import os
import pymongo
import zipfile
import random
from PIL import Image
import warnings

from functions.utils import producer, wait_for_result
from functions.utils import producer_promts, get_response
from functions.utils import get_middle_frame
from functions.utils import generate_ocean_scores, plot_ocean_radar

from config import username, password, mongo_host, mongo_port


################################################################################################################################################

# –ö–æ–¥–∏—Ä—É–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ base64 –∏ —Å–æ–∑–¥–∞–µ–º URL –¥–ª—è MongoDB
auth_base64 = base64.b64encode(f"{username}:{password}".encode()).decode()
client = pymongo.MongoClient(
    f"mongodb://{username}:{password}@{mongo_host}:{mongo_port}/?authSource=admin",
    username=username, password=password
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
db = client["data_soc_type"]
collection = db["whisper"]
collection_prompts = db["prompts"]

################################################################################################################################################


image_url = "https://static.tildacdn.com/tild6161-6662-4063-b862-333738316132/Group_13_3.svg"


################################################################################################################################################

mbti_to_ocean = {
    'ESTJ': {'extraversion': (0.6, 0.8), 'neuroticism': (0.3, 0.5), 'agreeableness': (0.4, 0.6), 'conscientiousness': (0.7, 0.9), 'openness': (0.5, 0.7)},
    'ENTJ': {'extraversion': (0.6, 0.8), 'neuroticism': (0.3, 0.5), 'agreeableness': (0.4, 0.6), 'conscientiousness': (0.7, 0.9), 'openness': (0.6, 0.8)},
    'ISTP': {'extraversion': (0.4, 0.6), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.4, 0.6), 'conscientiousness': (0.5, 0.7), 'openness': (0.5, 0.7)},
    'INTP': {'extraversion': (0.2, 0.4), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.3, 0.5), 'conscientiousness': (0.3, 0.5), 'openness': (0.8, 1.0)},
    'ESFJ': {'extraversion': (0.7, 0.9), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.7, 0.9), 'conscientiousness': (0.6, 0.8), 'openness': (0.4, 0.6)},
    'ENFJ': {'extraversion': (0.7, 0.9), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.8, 1.0), 'conscientiousness': (0.6, 0.8), 'openness': (0.7, 0.9)},
    'INFP': {'extraversion': (0.2, 0.4), 'neuroticism': (0.6, 0.8), 'agreeableness': (0.7, 0.9), 'conscientiousness': (0.3, 0.5), 'openness': (0.7, 0.9)},
    'ISFP': {'extraversion': (0.3, 0.5), 'neuroticism': (0.5, 0.7), 'agreeableness': (0.7, 0.9), 'conscientiousness': (0.4, 0.6), 'openness': (0.6, 0.8)},
    'ESTP': {'extraversion': (0.8, 1.0), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.5, 0.7), 'conscientiousness': (0.4, 0.6), 'openness': (0.6, 0.8)},
    'ESFP': {'extraversion': (0.8, 1.0), 'neuroticism': (0.5, 0.7), 'agreeableness': (0.7, 0.9), 'conscientiousness': (0.4, 0.6), 'openness': (0.7, 0.9)},
    'ISFJ': {'extraversion': (0.3, 0.5), 'neuroticism': (0.5, 0.7), 'agreeableness': (0.8, 1.0), 'conscientiousness': (0.6, 0.8), 'openness': (0.4, 0.6)},
    'ISTJ': {'extraversion': (0.3, 0.5), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.5, 0.7), 'conscientiousness': (0.7, 0.9), 'openness': (0.4, 0.6)},
    'ENFP': {'extraversion': (0.7, 0.9), 'neuroticism': (0.5, 0.7), 'agreeableness': (0.6, 0.8), 'conscientiousness': (0.4, 0.6), 'openness': (0.8, 1.0)},
    'ENTP': {'extraversion': (0.7, 0.9), 'neuroticism': (0.4, 0.6), 'agreeableness': (0.4, 0.6), 'conscientiousness': (0.3, 0.5), 'openness': (0.8, 1.0)},
    'INTJ': {'extraversion': (0.2, 0.4), 'neuroticism': (0.3, 0.5), 'agreeableness': (0.3, 0.5), 'conscientiousness': (0.6, 0.8), 'openness': (0.7, 0.9)},
    'INFJ': {'extraversion': (0.2, 0.4), 'neuroticism': (0.5, 0.7), 'agreeableness': (0.8, 1.0), 'conscientiousness': (0.6, 0.8), 'openness': (0.8, 1.0)}
}

vacancies_with_mbti = {
    "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫": ["INTJ", "ENTJ", "INTP"],
    "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π": ["ENTP", "ENFP", "INTJ"],
    "–î–∏–∑–∞–π–Ω–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ñ–µ—Ä—ã": ["ISFP", "INFJ", "ENFP"],
    "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞": ["ESTJ", "ENTJ", "ISTJ"],
    "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º": ["INFJ", "ENFJ", "ISFJ"],
    "PR-–º–µ–Ω–µ–¥–∂–µ—Ä –∏–ª–∏ Event-–º–µ–Ω–µ–¥–∂–µ—Ä": ["ESFP", "ENFP", "ESFJ"],
    "–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö": ["INTJ", "INTP", "ISTJ"],
    "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—É": ["ENFJ", "ISFJ", "ESFJ"],
    "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞—á–µ—Å—Ç–≤—É": ["ISTJ", "ESTJ", "ISTP"],
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫": ["INTP", "INTJ", "ISTP"],
    "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º": ["ESTP", "ESFP", "ENFP"],
    "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤": ["INFJ", "ISFJ", "ENFJ"],
    "–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç—Ä–µ–Ω–µ—Ä –∏–ª–∏ –∫–æ—É—á": ["ENFJ", "INFJ", "ENFP"],
    "–ò–Ω–∂–µ–Ω–µ—Ä-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä": ["ISTP", "INTJ", "ISTJ"],
    "–ö–æ–º–∞–Ω–¥–Ω—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä": ["ESFJ", "ISFJ", "ESTJ"],
}

mbti_descriptions = {
    "ESTJ": "ESTJ (–†–µ–∂–∏—Å—Å–µ—Ä) ‚Äî –®—Ç–∏—Ä–ª–∏—Ü. –õ–æ–≥–∏–∫–æ-—Å–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä, —Ü–µ–Ω—è—â–∏–π –ø–æ—Ä—è–¥–æ–∫ –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å.",
    "ENTJ": "ENTJ (–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü) ‚Äî –î–∂–µ–∫ –õ–æ–Ω–¥–æ–Ω. –õ–æ–≥–∏–∫–æ-–∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –ª–∏–¥–µ—Ä, –Ω–∞—Ü–µ–ª–µ–Ω–Ω—ã–π –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —Ü–µ–ª–µ–π.",
    "ISTP": "ISTP (–ú–∞—ç—Å—Ç—Ä–æ) ‚Äî –ì–∞–±–µ–Ω. –°–µ–Ω—Å–æ—Ä–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å.",
    "INTP": "INTP (–ù–æ–≤–∞—Ç–æ—Ä) ‚Äî –ë–∞–ª—å–∑–∞–∫. –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –º—ã—Å–ª–∏—Ç–µ–ª—å –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –∏–¥–µ—è–º–∏.",
    "ESFJ": "ESFJ (–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä) ‚Äî –ì—é–≥–æ. –≠—Ç–∏—á–µ—Å–∫–∏-—Å–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –¥—Ä—É–≥–∏—Ö.",
    "ENFJ": "ENFJ (–ö–æ—É—á) ‚Äî –ì–∞–º–ª–µ—Ç. –≠—Ç–∏—á–µ—Å–∫–∏-–∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.",
    "INFP": "INFP (–§–∏–ª–æ—Å–æ—Ñ) ‚Äî –ï—Å–µ–Ω–∏–Ω. –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ-—ç—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –º–µ—á—Ç–∞—Ç–µ–ª—å –∏ –∏–¥–µ–∞–ª–∏—Å—Ç —Å –±–æ–≥–∞—Ç—ã–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –º–∏—Ä–æ–º.",
    "ISFP": "ISFP (–ê—Ä—Ç–∏—Å—Ç) ‚Äî –î—é–º–∞. –°–µ–Ω—Å–æ—Ä–Ω–æ-—ç—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –∂–∏–≤–µ—Ç –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Å–æ–±–æ–π –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏.",
    "ESTP": "ESTP (–ë–∏–∑–Ω–µ—Å–º–µ–Ω) ‚Äî –ñ—É–∫–æ–≤. –°–µ–Ω—Å–æ—Ä–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–∏–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π –≤ —Å–µ–±–µ.",
    "ESFP": "ESFP (–ì–µ–¥–æ–Ω–∏—Å—Ç) ‚Äî –ù–∞–ø–æ–ª–µ–æ–Ω. –°–µ–Ω—Å–æ—Ä–Ω–æ-—ç—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –∂–∏–≤–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–º –∏ —Ü–µ–Ω–∏—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –∂–∏–∑–Ω–∏.",
    "ISFJ": "ISFJ (–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å) ‚Äî –î—Ä–∞–π–∑–µ—Ä. –°–µ–Ω—Å–æ—Ä–Ω–æ-—ç—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π, —Ü–µ–Ω–∏—Ç —Ç—Ä–∞–¥–∏—Ü–∏–∏.",
    "ISTJ": "ISTJ (–°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å) ‚Äî –ú–∞–∫—Å–∏–º –ì–æ—Ä—å–∫–∏–π. –õ–æ–≥–∏–∫–æ-—Å–µ–Ω—Å–æ—Ä–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π.",
    "ENFP": "ENFP (–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Ç—Ä–µ–Ω–¥–æ–≤) ‚Äî –ì–µ–∫—Å–ª–∏. –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ-—ç—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –ª—é–±–∏—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏.",
    "ENTP": "ENTP (–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å) ‚Äî –î–æ–Ω –ö–∏—Ö–æ—Ç. –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–∏–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –Ω–æ–≤–∞—Ç–æ—Ä.",
    "INTJ": "INTJ (–°—Ç—Ä–∞—Ç–µ–≥) ‚Äî –†–æ–±–µ—Å–ø—å–µ—Ä. –õ–æ–≥–∏–∫–æ-–∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, —Å—Ç—Ä–∞—Ç–µ–≥ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å –¥–∞–ª—å–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç—å—é.",
    "INFJ": "INFJ (–ü—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–Ω—ã–π) ‚Äî –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π. –≠—Ç–∏—á–µ—Å–∫–∏-–∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç, –≥–ª—É–±–æ–∫–æ–º—ã—Å–ª—è—â–∏–π –∏ —á—É—Ç–∫–∏–π –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º."
}

################################################################################################################################################

st.title("–ü–æ–¥–±–æ—Ä –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –ø–æ —Ç–∏–ø—É –ª–∏—á–Ω–æ—Å—Ç–∏")

st.image(image_url, 
         use_container_width=True)

tab1, tab2 = st.tabs(["–°–æ–∏—Å–∫–∞—Ç–µ–ª—åüòéüìä", "–†–∞–±–æ—Ç–∞–¥–∞—Ç–µ–ª—åüöÄüíª"])

################################################################################################################################################

hh = pd.read_csv('hh_dataset.csv')

hh['salary_range'] = (hh['salary_to'] + hh['salary_from'])//2
            
################################################################################################################################################

with tab1:    

    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ", type=["mp4"])
    if st.button("–£–∑–Ω–∞—Ç—å —Å–≤–æ–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏", key='button1'):

        if uploaded_file is not None:
            with open(uploaded_file.name, "wb") as f:
                f.write(uploaded_file.getbuffer())

            record_id = producer(uploaded_file.name)
            result = wait_for_result(record_id)
            
            st.video(uploaded_file)
            st.success('–í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!', icon="‚úÖ")
            
            record_id = producer_promts(result, "–¢—ã –¥–æ–ª–∂–µ–Ω –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å MBTI —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –º–Ω–æ–π —Ç–µ–∫—Å—Ç–∞. –í —Ç–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ç—ã—Ä—ë—Ö–±—É–∫–≤–µ–Ω–Ω—ã–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, INFJ). –ï—Å–ª–∏ —Ç–∏–ø –Ω–µ –æ—á–µ–≤–∏–¥–µ–Ω, —É–∫–∞–∂–∏ –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–π. –í–æ—Ç —Å–ø–∏—Å–∫–æ–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤: ISTJ (–ª–æ–≥–∏—Å—Ç) ‚Äî —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π; ISFJ (–∑–∞—â–∏—Ç–Ω–∏–∫) ‚Äî –ø—Ä–µ–¥–∞–Ω–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π; INFJ (–∞–¥–≤–æ–∫–∞—Ç) ‚Äî —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã–π; INTJ (–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä) ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π –≤ —Å–µ–±–µ –ª–æ–≥–∏–∫; ISTP (–º–∞—Å—Ç–µ—Ä) ‚Äî –±–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π; ISFP (—Ö—É–¥–æ–∂–Ω–∏–∫) ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π; INFP (–ø–æ—Å—Ä–µ–¥–Ω–∏–∫) ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π; INTP (–º—ã—Å–ª–∏—Ç–µ–ª—å) ‚Äî —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π; ESTP (–¥–µ–ª–µ—Ü) ‚Äî —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π; ESFP (–∞—Ä—Ç–∏—Å—Ç) ‚Äî –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –∏ –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã–π; ENFP (—á–µ–º–ø–∏–æ–Ω) ‚Äî –∞–∫—Ç–∏–≤–Ω—ã–π –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π; ENTP (—Å–ø–æ—Ä—â–∏–∫) ‚Äî —Å–º–µ–ª—ã–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π; ESTJ (—Ä–µ–∂–∏—Å—Å—ë—Ä) ‚Äî —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π; ESFJ (–≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å) ‚Äî –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π; ENFJ (–≥–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π) ‚Äî —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã–π; ENTJ (–∫–æ–º–∞–Ω–¥–∏—Ä) ‚Äî –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –∏ –ª—é–±—è—â–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É.")
            response = get_response(record_id)
            
            st.subheader(f"–¢–≤–æ–π —Ç–∏–ø: **{response}**")
            st.markdown(mbti_descriptions[response])
            
            st.subheader("–†–∞–¥–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ OCEAN")
            ocean_scores = generate_ocean_scores(response)
            fig = plot_ocean_radar(ocean_scores)
            st.pyplot(fig)
            
            st.subheader("–¢–µ–∫—Å—Ç –≤ –≤–∏–¥–µ–æ:")
            st.markdown(result)
        else:
            st.write("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª.")
        
            
################################################################################################################################################

    
with tab2:
    
    uploaded_zip = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ ZIP-–∞—Ä—Ö–∏–≤...", type=["zip"], key="uploader1")
    
    vacancy = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é", list(vacancies_with_mbti.keys()))
    
    if st.button("–ü–æ–¥–æ–±—Ä–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤"):

        if uploaded_zip is not None:
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
            archive_name = os.path.splitext(uploaded_zip.name)[0]
            extraction_path = os.path.join(".", archive_name)  # –ü—É—Ç—å –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∞—Ä—Ö–∏–≤–∞
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É —Å –∏–º–µ–Ω–µ–º –∞—Ä—Ö–∏–≤–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not os.path.exists(extraction_path):
                os.makedirs(extraction_path)
            
            # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –≤ –ø–∞–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∞—Ä—Ö–∏–≤–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø—É—Ç–∏
            with zipfile.ZipFile(uploaded_zip, 'r') as zip_ref:
                for member in zip_ref.namelist():
                    # –£–±–∏—Ä–∞–µ–º –ø—É—Ç–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞
                    filename = os.path.basename(member)
                    if not filename:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫–∏
                        continue
                    
                    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                    target_path = os.path.join(extraction_path, filename)
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                    with open(target_path, "wb") as file:
                        file.write(zip_ref.read(member))
            
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
            video_files = [os.path.join(extraction_path, f) for f in os.listdir(extraction_path) if f.endswith(".mp4")]
            st.write("–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:", video_files)
            
            # –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–º –≤–∏–¥–µ–æ
            video_data = []
            
            for video_file in video_files:
                # –ü–µ—Ä–≤—ã–π —ç—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏: –ø–æ–ª—É—á–µ–Ω–∏–µ record_id
                record_id = producer(video_file)
                result = wait_for_result(record_id)
                
                # –í—Ç–æ—Ä–æ–π —ç—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ MBTI
                record_id = producer_promts(result, "–¢—ã –¥–æ–ª–∂–µ–Ω –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å MBTI —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –º–Ω–æ–π —Ç–µ–∫—Å—Ç–∞. –í —Ç–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ç—ã—Ä—ë—Ö–±—É–∫–≤–µ–Ω–Ω—ã–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, INFJ). –ï—Å–ª–∏ —Ç–∏–ø –Ω–µ –æ—á–µ–≤–∏–¥–µ–Ω, —É–∫–∞–∂–∏ –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–π. –í–æ—Ç —Å–ø–∏—Å–∫–æ–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤: ISTJ (–ª–æ–≥–∏—Å—Ç) ‚Äî —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –∏ –Ω–∞–¥—ë–∂–Ω—ã–π; ISFJ (–∑–∞—â–∏—Ç–Ω–∏–∫) ‚Äî –ø—Ä–µ–¥–∞–Ω–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π; INFJ (–∞–¥–≤–æ–∫–∞—Ç) ‚Äî —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã–π; INTJ (–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä) ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π –≤ —Å–µ–±–µ –ª–æ–≥–∏–∫; ISTP (–º–∞—Å—Ç–µ—Ä) ‚Äî –±–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π; ISFP (—Ö—É–¥–æ–∂–Ω–∏–∫) ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π; INFP (–ø–æ—Å—Ä–µ–¥–Ω–∏–∫) ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π; INTP (–º—ã—Å–ª–∏—Ç–µ–ª—å) ‚Äî —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π; ESTP (–¥–µ–ª–µ—Ü) ‚Äî —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π; ESFP (–∞—Ä—Ç–∏—Å—Ç) ‚Äî –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –∏ –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã–π; ENFP (—á–µ–º–ø–∏–æ–Ω) ‚Äî –∞–∫—Ç–∏–≤–Ω—ã–π –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π; ENTP (—Å–ø–æ—Ä—â–∏–∫) ‚Äî —Å–º–µ–ª—ã–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π; ESTJ (—Ä–µ–∂–∏—Å—Å—ë—Ä) ‚Äî —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π; ESFJ (–≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å) ‚Äî –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π; ENFJ (–≥–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π) ‚Äî —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã–π; ENTJ (–∫–æ–º–∞–Ω–¥–∏—Ä) ‚Äî –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –∏ –ª—é–±—è—â–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É.")
                response = get_response(record_id)
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞–¥—Ä –∏–∑ —Å–µ—Ä–µ–¥–∏–Ω—ã –≤–∏–¥–µ–æ
                photo_path = get_middle_frame(video_file)
                
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                video_data.append({"video_path": video_file, "MBTI": response, "–û–ø–∏—Å–∞–Ω–∏–µ": result, "photo_path": photo_path})
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ DataFrame –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–ª–µ–µ
            df = pd.DataFrame(video_data)
            
            st.success('–ê—Ä—Ö–∏–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!', icon="‚úÖ")
        
            st.balloons()

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö MBTI —Ç–∏–ø–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
            suitable_mbti = vacancies_with_mbti[vacancy]
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º DataFrame –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º MBTI
            filtered_df = df[df["MBTI"].isin(suitable_mbti)]
            
            # –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–µ–Ω—å—à–µ 9, –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
            if len(filtered_df) < 9:
                remaining_df = df[~df.index.isin(filtered_df.index)]
                filtered_df = pd.concat([filtered_df, remaining_df]).head(9)
            else:
                filtered_df = filtered_df.head(9)

            # –í—ã–≤–æ–¥ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º
            columns = [st.columns(3) for _ in range(3)]
            
            for idx, (col, (_, row)) in enumerate(zip([col for cols in columns for col in cols], filtered_df.iterrows())):
                with col:
                    st.markdown(f"### –ú–µ—Å—Ç–æ {idx + 1}")
                    st.image(row['photo_path'], use_container_width=True)  # –ó–∞–≥–ª—É—à–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–∞–¥—Ä–∞
                    st.markdown(f"**–¢–∏–ø MBTI**: {row['MBTI']}")
                    st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ**: {row['–û–ø–∏—Å–∞–Ω–∏–µ']}")
            
            st.write("---")
            


